/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
 */
console.log('üîç Debug-History: –°–∫—Ä–∏–ø—Ç –æ—Ç–ª–∞–¥–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ cookie –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const checkAuth = () => {
    const cookies = document.cookie.split(';').map(c => c.trim());
    const loginCookie = cookies.find(c => c.startsWith('login='));
    
    console.log('üîç Debug-History: –ö—É–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', cookies);
    console.log('üîç Debug-History: –ö—É–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', loginCookie);
    
    if (loginCookie) {
        const username = loginCookie.split('=')[1];
        console.log('üîç Debug-History: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫:', username);
        return true;
    } else {
        console.log('üîç Debug-History: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return false;
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ movie-details
const checkMovieDetails = () => {
    const movieDetails = document.querySelector('.movie-details');
    console.log('üîç Debug-History: –≠–ª–µ–º–µ–Ω—Ç .movie-details:', movieDetails);
    
    if (movieDetails) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        console.log('üîç Debug-History: HTML —ç–ª–µ–º–µ–Ω—Ç–∞:', movieDetails.outerHTML.substring(0, 300) + '...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ data-–∞—Ç—Ä–∏–±—É—Ç—ã
        const allAttrs = Array.from(movieDetails.attributes)
            .filter(attr => attr.name.startsWith('data-'))
            .map(attr => `${attr.name}: ${attr.value}`);
        console.log('üîç Debug-History: –í—Å–µ data-–∞—Ç—Ä–∏–±—É—Ç—ã:', allAttrs);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
        const attributes = {
            'id': movieDetails.getAttribute('data-content-id'),
            'type': movieDetails.getAttribute('data-content-type'),
            'title': movieDetails.getAttribute('data-content-title'),
            'poster': movieDetails.getAttribute('data-content-poster'),
            'year': movieDetails.getAttribute('data-content-year')
        };
        
        console.log('üîç Debug-History: –ê—Ç—Ä–∏–±—É—Ç—ã —ç–ª–µ–º–µ–Ω—Ç–∞:', attributes);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        const requiredAttributes = ['id', 'type', 'title'];
        const missingAttributes = requiredAttributes.filter(attr => !attributes[attr]);
        
        if (missingAttributes.length === 0) {
            console.log('üîç Debug-History: –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        } else {
            console.log('üîç Debug-History: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞—Ç—Ä–∏–±—É—Ç—ã:', missingAttributes);
        }
        
        return attributes;
    } else {
        console.log('üîç Debug-History: –≠–ª–µ–º–µ–Ω—Ç .movie-details –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return null;
    }
};

// –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ add_to_history.php
const testDirectRequest = (attributes) => {
    if (!attributes) return;
    
    const fullPath = '/project/add_to_history.php';
    
    console.log('üîç Debug-History: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏:', fullPath);
    
    const formData = new FormData();
    Object.entries(attributes).forEach(([key, value]) => {
        if (value) formData.append(key, value);
    });
    
    fetch(fullPath, {
        method: 'POST',
        body: formData,
        credentials: 'same-origin'
    })
    .then(response => {
        console.log('üîç Debug-History: –°—Ç–∞—Ç—É—Å –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', response.status);
        return response.text();
    })
    .then(data => {
        console.log('üîç Debug-History: –û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å:', 
            data.substring(0, 100) + (data.length > 100 ? '...' : ''));
        try {
            const json = JSON.parse(data);
            console.log('üîç Debug-History: –û—Ç–≤–µ—Ç –≤ JSON:', json);
        } catch(e) {
            console.log('üîç Debug-History: –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON');
        }
    })
    .catch(error => {
        console.log('üîç Debug-History: –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', error);
    });
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîç Debug-History: DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É');
    
    const isAuth = checkAuth();
    const attributes = checkMovieDetails();
    
    if (isAuth && attributes) {
        console.log('üîç Debug-History: –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å');
        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
        testDirectRequest(attributes);
    } else {
        console.log('üîç Debug-History: –ü—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è');
    }
});

// –ú–µ—Ç–æ–¥ –¥–ª—è —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –∫–æ–Ω—Å–æ–ª–∏)
window.debugAddToHistory = () => {
    console.log('üîç Debug-History: –†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é');
    
    const attributes = checkMovieDetails();
    if (!attributes || !attributes.id || !attributes.type || !attributes.title) {
        console.log('üîç Debug-History: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é');
        
        // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        const manualData = {
            id: attributes?.id || prompt('–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
            type: attributes?.type || prompt('–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø (film/serial)'),
            title: attributes?.title || prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'),
            poster: attributes?.poster || '',
            year: attributes?.year || ''
        };
        
        console.log('üîç Debug-History: –†—É—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', manualData);
        
        if (manualData.id && manualData.type && manualData.title) {
            if (typeof addToViewingHistory === 'function') {
                console.log('üîç Debug-History: –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é addToViewingHistory');
                addToViewingHistory(manualData);
            } else {
                console.log('üîç Debug-History: –§—É–Ω–∫—Ü–∏—è addToViewingHistory –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        }
    } else {
        if (typeof addToViewingHistory === 'function') {
            console.log('üîç Debug-History: –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é addToViewingHistory');
            addToViewingHistory(attributes);
        } else {
            console.log('üîç Debug-History: –§—É–Ω–∫—Ü–∏—è addToViewingHistory –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    }
}; 